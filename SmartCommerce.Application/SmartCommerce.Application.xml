<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SmartCommerce.Application</name>
    </assembly>
    <members>
        <member name="T:SmartCommerce.Application.Controllers.BaseController">
            <summary>
            Controle base
            </summary>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.BaseController.Execute(System.Func{System.Object})">
            <summary>
            Executa uma function
            </summary>
            <param name="func">função para execução</param>
            <returns>Ok para sucesso e BadRequest para erros</returns>
        </member>
        <member name="T:SmartCommerce.Application.Controllers.HealthCheckController">
            <summary>
             HealthCheck da aplicação
            </summary>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.HealthCheckController.#ctor(SmartCommerce.Domain.Interfaces.IBaseService{SmartCommerce.Domain.Entities.Usuario})">
            <summary>
            Ctr
            </summary>
            <param name="baseUserService"></param>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.HealthCheckController.Index">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:SmartCommerce.Application.Controllers.HomeController">
            <summary>
             Home
            </summary>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.HomeController.Index">
            <summary>
            Ctr
            </summary>
            <returns></returns>
        </member>
        <member name="T:SmartCommerce.Application.Controllers.LocalController">
            <summary>
            Controle de locais
            </summary>
        </member>
        <member name="F:SmartCommerce.Application.Controllers.LocalController._baseService">
            <summary>
            Serviço de Usuário
            </summary>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.LocalController.#ctor(SmartCommerce.Domain.Interfaces.ILocalService,AutoMapper.IMapper)">
            <summary>
            Ctr
            </summary>
            <param name="baseUserService"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.LocalController.Create(SmartCommerce.Domain.Entities.Local)">
            <summary>
            Insere um novo registro
            </summary>
            <param name="local">Modelo para inserir</param>
            <returns>Id do obj</returns>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.LocalController.Update(SmartCommerce.Domain.Entities.Local)">
            <summary>
            Atualiza um registro
            </summary>
            <param name="local">Usuário com Id para atualização</param>
            <returns>Modelo atualizado</returns>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.LocalController.Delete(System.Int32)">
            <summary>
            Remove um registro
            </summary>
            <param name="id">Identificador</param>
            <returns></returns>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.LocalController.Get(SmartCommerce.Domain.Filter.PaginationFilter)">
            <summary>
            Retorna uma lista de registros
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.LocalController.Get(System.Int32)">
            <summary>
            Procura um registro por Id
            </summary>
            <param name="id">Identificador único</param>
            <returns></returns>
        </member>
        <member name="T:SmartCommerce.Application.Controllers.LoginController">
            <summary>
            Gerencia os dados de login, como geração de Token
            </summary>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.LoginController.#ctor(SmartCommerce.Domain.Interfaces.ILoginService,AutoMapper.IMapper)">
            <summary>
            Ctr
            </summary>
            <param name="loginService"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.LoginController.Login(SmartCommerce.Domain.Models.Autenticacao)">
            <summary>
            Gera um token
            </summary>
            <param name="autenticacaoModel"></param>
            <returns></returns>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.LoginController.Create(SmartCommerce.Domain.Entities.Login)">
            <summary>
            Insere um novo registro
            </summary>
            <param name="login">Modelo para inserir</param>
            <returns>Id do obj</returns>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.LoginController.ObterDadosPorToken">
            <summary>
            Retorna as Claims vinculadas no Token do Header
            </summary>
            <returns></returns>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.LoginController.Get">
            <summary>
            Retorna os dados do usuário autenticado
            </summary>
            <returns></returns>
        </member>
        <member name="T:SmartCommerce.Application.Controllers.SegmentoController">
            <summary>
            Controle de segmentos
            </summary>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.SegmentoController.#ctor(SmartCommerce.Domain.Interfaces.ISegmentoService)">
            <summary>
            Ctr
            </summary>
            <param name="baseService"></param>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.SegmentoController.Create(SmartCommerce.Domain.Entities.Segmento)">
            <summary>
            Insere um novo registro
            </summary>
            <param name="segmento">Modelo para inserir</param>
            <returns>Id do obj</returns>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.SegmentoController.Update(SmartCommerce.Domain.Entities.Segmento)">
            <summary>
            Atualiza um registro
            </summary>
            <param name="segmento">Usuário com Id para atualização</param>
            <returns>Modelo atualizado</returns>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.SegmentoController.Delete(System.Int32)">
            <summary>
            Remove um registro
            </summary>
            <param name="id">Identificador</param>
            <returns></returns>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.SegmentoController.Get(SmartCommerce.Domain.Filter.PaginationFilter)">
            <summary>
            Retorna uma lista de registros
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.SegmentoController.Get(System.Int32)">
            <summary>
            Procura um registro por Id
            </summary>
            <param name="id">Identificador único</param>
            <returns></returns>
        </member>
        <member name="T:SmartCommerce.Application.Controllers.UsuarioController">
            <summary>
            Controle de usuários
            </summary>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.UsuarioController.#ctor(SmartCommerce.Domain.Interfaces.IBaseService{SmartCommerce.Domain.Entities.Usuario})">
            <summary>
            Ctr
            </summary>
            <param name="baseUserService"></param>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.UsuarioController.Create(SmartCommerce.Domain.Entities.Usuario)">
            <summary>
            Insere um novo registro
            </summary>
            <param name="user">Modelo para inserir</param>
            <returns>Id do obj</returns>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.UsuarioController.Update(SmartCommerce.Domain.Entities.Usuario)">
            <summary>
            Atualiza um registro
            </summary>
            <param name="user">Usuário com Id para atualização</param>
            <returns>Modelo atualizado</returns>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.UsuarioController.Delete(System.Int32)">
            <summary>
            Remove um registro
            </summary>
            <param name="id">Identificador</param>
            <returns></returns>
        </member>
        <member name="M:SmartCommerce.Application.Controllers.UsuarioController.Get">
            <summary>
            Retorna os dados do usuário autenticado
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
